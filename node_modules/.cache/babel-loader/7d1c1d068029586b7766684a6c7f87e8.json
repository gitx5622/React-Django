{"ast":null,"code":"import _defineProperty from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gits/Desktop/React-Shopping-Cart/src/components/ProductDetail.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Grid, Icon, Card, Button, Form, Divider, Segment, Container } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { productDetailURL, addToCartURL } from \"../constants\";\nimport { fetchCart } from \"../components/actions/cart\";\nimport { authAxios } from \"../utils\";\n\nvar ProductDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductDetail, _Component);\n\n  function ProductDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProductDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProductDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      formVisible: false,\n      data: [],\n      formData: {}\n    };\n\n    _this.handleToggleForm = function () {\n      var formVisible = _this.state.formVisible;\n\n      _this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    _this.handleFetchItem = function () {\n      var params = _this.props.match.params;\n      axios.get(productDetailURL(params.productID)).then(function (res) {\n        _this.setState({\n          data: res.data\n        });\n      });\n    };\n\n    _this.handleAddToCart = function (slug) {\n      axios.post(addToCartURL, {\n        slug: slug\n      }).then(function (res) {\n        _this.props.refreshCart();\n      });\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var formData = _this.state.formData;\n\n      var updatedFormData = _objectSpread({}, formData, _defineProperty({}, name, value));\n\n      _this.setState({\n        formData: updatedFormData\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProductDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleFetchItem();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          formVisible = _this$state.formVisible;\n      var item = data;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Card, {\n        fluid: true,\n        image: item.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Card, {\n        header: item.title,\n        meta: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, item.discount_price),\n        description: item.description,\n        extra: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Button, {\n          fluid: true,\n          color: \"yellow\",\n          floated: \"right\",\n          icon: true,\n          labelPosition: \"right\",\n          onClick: this.handleToggleForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Add to cart\", React.createElement(Icon, {\n          name: \"cart plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), formVisible && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: function onSubmit() {\n          return _this2.handleAddToCart(item.slug);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form.Button, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Add\"))))))));\n    }\n  }]);\n\n  return ProductDetail;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    refreshCart: function refreshCart() {\n      return dispatch(fetchCart());\n    }\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));","map":{"version":3,"sources":["/home/gits/Desktop/React-Shopping-Cart/src/components/ProductDetail.js"],"names":["React","Component","withRouter","connect","Grid","Icon","Card","Button","Form","Divider","Segment","Container","axios","productDetailURL","addToCartURL","fetchCart","authAxios","ProductDetail","state","formVisible","data","formData","handleToggleForm","setState","handleFetchItem","params","props","match","get","productID","then","res","handleAddToCart","slug","post","refreshCart","handleChange","e","name","value","updatedFormData","item","image","title","discount_price","description","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Grid,Icon,Card, Button,Form,Divider,Segment,Container} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { productDetailURL, addToCartURL } from \"../constants\";\nimport { fetchCart } from \"../components/actions/cart\";\nimport { authAxios } from \"../utils\";\n\nclass ProductDetail extends Component {\n\n    state = {\n      formVisible: false,\n      data: [],\n      formData: {}\n    };\n    componentDidMount() {\n      this.handleFetchItem();\n    }\n  \n    handleToggleForm = () => {\n      const { formVisible } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n  \n    handleFetchItem = () => {\n      const {\n        match: { params }\n      } = this.props;\n      axios\n        .get(productDetailURL(params.productID))\n        .then(res => {\n          this.setState({ data: res.data});\n        })\n        \n    };\n  \n    handleAddToCart = slug => {\n      axios\n        .post(addToCartURL,{ slug})\n        .then(res => {\n          this.props.refreshCart();\n        })\n       \n    };\n  \n    handleChange = (e, { name, value }) => {\n      const { formData } = this.state;\n      const updatedFormData = {\n        ...formData,\n        [name]: value\n      };\n      this.setState({ formData: updatedFormData });\n    };\n  \n  render(){\n    const { data, formVisible } = this.state;\n    const item = data;\n  return(\n    <Container>\n      <Grid columns='equal'>\n    <Grid.Row>\n  <Grid.Column>\n    <Segment>\n    <Card\n          fluid\n          image={item.image}\n         \n        />\n    </Segment>\n  </Grid.Column>\n  <Grid.Column>\n    <Segment>\n    <Card\n      header={item.title}\n          meta={\n            <React.Fragment>\n              {item.discount_price}\n            </React.Fragment>\n          }\n          description={item.description}\n          extra={\n            <React.Fragment>\n              <Button\n                fluid\n                color=\"yellow\"\n                floated=\"right\"\n                icon\n                labelPosition=\"right\"\n                onClick={this.handleToggleForm}\n              >\n                Add to cart\n                <Icon name=\"cart plus\" />\n              </Button>\n            </React.Fragment>\n          }\n          />\n      {formVisible && (\n          <React.Fragment>\n            <Divider />\n            <Form onSubmit={() => this.handleAddToCart(item.slug)}>\n              <Form.Button primary>Add</Form.Button>\n            </Form>\n          </React.Fragment>\n        )}\n    </Segment>\n  </Grid.Column>\n</Grid.Row>\n</Grid>\n</Container>\n  \n)\n}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null,mapDispatchToProps)(ProductDetail));\n"]},"metadata":{},"sourceType":"module"}