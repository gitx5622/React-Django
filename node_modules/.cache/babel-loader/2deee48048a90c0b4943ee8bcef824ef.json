{"ast":null,"code":"import _defineProperty from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gits/Desktop/React-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gits/Desktop/React-Shopping-Cart/src/components/ProductDetail.js\";\nimport React, { Component } from 'react';\nimport { Grid, Item, Label, Icon, Button, Form, Header, Card, Divider, Select } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { productDetailURL, addToCartURL } from \"../constants\";\nimport { fetchCart } from \"../components/actions/cart\";\nimport { authAxios } from \"../utils\";\n\nvar ProductDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductDetail, _Component);\n\n  function ProductDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProductDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProductDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      error: null,\n      formVisible: false,\n      data: [],\n      formData: {}\n    };\n\n    _this.handleToggleForm = function () {\n      var formVisible = _this.state.formVisible;\n\n      _this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    _this.handleFetchItem = function () {\n      var params = _this.props.match.params;\n\n      _this.setState({\n        loading: true\n      });\n\n      axios.get(productDetailURL(params.productID)).then(function (res) {\n        _this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(function (err) {\n        _this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    _this.handleFormatData = function (formData) {\n      // convert {colour: 1, size: 2} to [1,2] - they're all variations\n      return Object.keys(formData).map(function (key) {\n        return formData[key];\n      });\n    };\n\n    _this.handleAddToCart = function (slug) {\n      _this.setState({\n        loading: true\n      });\n\n      var formData = _this.state.formData;\n\n      var variations = _this.handleFormatData(formData);\n\n      authAxios.post(addToCartURL, {\n        slug: slug,\n        variations: variations\n      }).then(function (res) {\n        _this.props.refreshCart();\n\n        _this.setState({\n          loading: false\n        });\n      }).catch(function (err) {\n        _this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var formData = _this.state.formData;\n\n      var updatedFormData = _objectSpread({}, formData, _defineProperty({}, name, value));\n\n      _this.setState({\n        formData: updatedFormData\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProductDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleFetchItem();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          error = _this$state.error,\n          formData = _this$state.formData,\n          formVisible = _this$state.formVisible,\n          loading = _this$state.loading;\n      var item = data;\n      return React.createElement(Grid, {\n        columns: 2,\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Card, {\n        fluid: true,\n        image: item.image,\n        header: item.title,\n        meta: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, item.category, item.discount_price && React.createElement(Label, {\n          color: item.label === \"primary\" ? \"blue\" : item.label === \"secondary\" ? \"green\" : \"olive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, item.label)),\n        description: item.description,\n        extra: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Button, {\n          fluid: true,\n          color: \"yellow\",\n          floated: \"right\",\n          icon: true,\n          labelPosition: \"right\",\n          onClick: this.handleToggleForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Add to cart\", React.createElement(Icon, {\n          name: \"cart plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), formVisible && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: function onSubmit() {\n          return _this2.handleAddToCart(item.slug);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, data.variations.map(function (v) {\n        var name = v.name.toLowerCase();\n        return React.createElement(Form.Field, {\n          key: v.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Select, {\n          name: name,\n          onChange: _this2.handleChange,\n          placeholder: \"Select a \".concat(name),\n          fluid: true,\n          selection: true,\n          options: v.item_variations.map(function (item) {\n            return {\n              key: item.id,\n              text: item.value,\n              value: item.id\n            };\n          }),\n          value: formData[name],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }));\n      }), React.createElement(Form.Button, {\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Try different variations\"), data.variations && data.variations.map(function (v) {\n        return React.createElement(React.Fragment, {\n          key: v.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, v.name), React.createElement(Item.Group, {\n          divided: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, v.item_variations.map(function (iv) {\n          return React.createElement(Item, {\n            key: iv.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, iv.attachment && React.createElement(Item.Image, {\n            size: \"tiny\",\n            src: \"http://127.0.0.1:8000\".concat(iv.attachment),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }), React.createElement(Item.Content, {\n            verticalAlign: \"middle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, iv.value));\n        })));\n      }))));\n    }\n  }]);\n\n  return ProductDetail;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    refreshCart: function refreshCart() {\n      return dispatch(fetchCart());\n    }\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));","map":{"version":3,"sources":["/home/gits/Desktop/React-Shopping-Cart/src/components/ProductDetail.js"],"names":["React","Component","Grid","Item","Label","Icon","Button","Form","Header","Card","Divider","Select","axios","productDetailURL","addToCartURL","fetchCart","authAxios","ProductDetail","state","loading","error","formVisible","data","formData","handleToggleForm","setState","handleFetchItem","params","props","match","get","productID","then","res","catch","err","handleFormatData","Object","keys","map","key","handleAddToCart","slug","variations","post","refreshCart","handleChange","e","name","value","updatedFormData","item","image","title","category","discount_price","label","description","v","toLowerCase","id","item_variations","text","iv","attachment","mapDispatchToProps","dispatch","withRouter","connect"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\n\nimport { Grid, Item,Label,Icon, Button,Form,Header,Card,Divider,Select} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { productDetailURL, addToCartURL } from \"../constants\";\nimport { fetchCart } from \"../components/actions/cart\";\nimport { authAxios } from \"../utils\";\n\nclass ProductDetail extends Component {\n\n    state = {\n      loading: false,\n      error: null,\n      formVisible: false,\n      data: [],\n      formData: {}\n    };\n    componentDidMount() {\n      this.handleFetchItem();\n    }\n  \n    handleToggleForm = () => {\n      const { formVisible } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n  \n    handleFetchItem = () => {\n      const {\n        match: { params }\n      } = this.props;\n      this.setState({ loading: true });\n      axios\n        .get(productDetailURL(params.productID))\n        .then(res => {\n          this.setState({ data: res.data, loading: false });\n        })\n        .catch(err => {\n          this.setState({ error: err, loading: false });\n        });\n    };\n  \n    handleFormatData = formData => {\n      // convert {colour: 1, size: 2} to [1,2] - they're all variations\n      return Object.keys(formData).map(key => {\n        return formData[key];\n      });\n    };\n  \n    handleAddToCart = slug => {\n      this.setState({ loading: true });\n      const { formData } = this.state;\n      const variations = this.handleFormatData(formData);\n      authAxios\n        .post(addToCartURL, { slug, variations })\n        .then(res => {\n          this.props.refreshCart();\n          this.setState({ loading: false });\n        })\n        .catch(err => {\n          this.setState({ error: err, loading: false });\n        });\n    };\n  \n    handleChange = (e, { name, value }) => {\n      const { formData } = this.state;\n      const updatedFormData = {\n        ...formData,\n        [name]: value\n      };\n      this.setState({ formData: updatedFormData });\n    };\n  \n  render(){\n    const { data, error, formData, formVisible, loading } = this.state;\n    const item = data;\n  return(\n   \n    <Grid columns={2} divided>\n    <Grid.Row>\n      <Grid.Column>\n        <Card\n          fluid\n          image={item.image}\n          header={item.title}\n          meta={\n            <React.Fragment>\n              {item.category}\n              {item.discount_price && (\n                <Label\n                  color={\n                    item.label === \"primary\"\n                      ? \"blue\"\n                      : item.label === \"secondary\"\n                      ? \"green\"\n                      : \"olive\"\n                  }\n                >\n                  {item.label}\n                </Label>\n              )}\n            </React.Fragment>\n          }\n          description={item.description}\n          extra={\n            <React.Fragment>\n              <Button\n                fluid\n                color=\"yellow\"\n                floated=\"right\"\n                icon\n                labelPosition=\"right\"\n                onClick={this.handleToggleForm}\n              >\n                Add to cart\n                <Icon name=\"cart plus\" />\n              </Button>\n            </React.Fragment>\n          }\n        />\n        {formVisible && (\n          <React.Fragment>\n            <Divider />\n            <Form onSubmit={() => this.handleAddToCart(item.slug)}>\n              {data.variations.map(v => {\n                const name = v.name.toLowerCase();\n                return (\n                  <Form.Field key={v.id}>\n                    <Select\n                      name={name}\n                      onChange={this.handleChange}\n                      placeholder={`Select a ${name}`}\n                      fluid\n                      selection\n                      options={v.item_variations.map(item => {\n                        return {\n                          key: item.id,\n                          text: item.value,\n                          value: item.id\n                        };\n                      })}\n                      value={formData[name]}\n                    />\n                  </Form.Field>\n                );\n              })}\n              <Form.Button primary>Add</Form.Button>\n            </Form>\n          </React.Fragment>\n        )}\n      </Grid.Column>\n      <Grid.Column>\n        <Header as=\"h2\">Try different variations</Header>\n        {data.variations &&\n          data.variations.map(v => {\n            return (\n              <React.Fragment key={v.id}>\n                <Header as=\"h3\">{v.name}</Header>\n                <Item.Group divided>\n                  {v.item_variations.map(iv => {\n                    return (\n                      <Item key={iv.id}>\n                        {iv.attachment && (\n                          <Item.Image\n                            size=\"tiny\"\n                            src={`http://127.0.0.1:8000${iv.attachment}`}\n                          />\n                        )}\n                        <Item.Content verticalAlign=\"middle\">\n                          {iv.value}\n                        </Item.Content>\n                      </Item>\n                    );\n                  })}\n                </Item.Group>\n              </React.Fragment>\n            );\n          })}\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n  \n)\n}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null,mapDispatchToProps)(ProductDetail));\n"]},"metadata":{},"sourceType":"module"}